name: Publish IOS Maui

on:
   workflow_dispatch: # This triggers the workflow manually

jobs:
  build:

    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
    
      with:
              ruby-version: '3.3'
              

    - uses: tashi-iu/setup-fastlane@v1
      with:
    # Optional. Default: 'latest'
            version: 'latest'
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Set Xcode version 
      run: sudo xcode-select -s /Applications/Xcode_16.4.app    
    - name: Setup Project
      run: |
       wget -O "AppName.zip" "${{ secrets.PROJECTURL }}"
       brew install sevenzip
       7z x "AppName.zip"
      
    - name: Install the Apple certificate and provisioning profile
      env:
         
       P12_PASSWORD: 20012008
        
       KEYCHAIN_PASSWORD: 20012008
       run: |  
          
          CERTIFICATE_PATH='./Certificatess.p12'
          PP_PATH='./testprofile.mobileprovision'
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # # import certificate and provisioning profile from secrets
          # echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          # echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "20012008" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "20012008" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles 
    - name: Install provisioning profile
      run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp './testprofile.mobileprovision' ~/Library/MobileDevice/Provisioning\ Profiles/
    - name: Get Code Signing Key
      id: get_code_signing_key
      run: echo "CODE_SIGNING_KEY=$(security find-identity -p codesigning -v | grep '"' | head -n1 | awk -F '"' '{print $2}')" >> $GITHUB_ENV
    - name: Setup Maui
      run: dotnet workload install maui-ios
    - name: Publish App
      run: |
            dotnet publish -f net9.0-ios -c Release -p:ArchiveOnBuild=true -p:RuntimeIdentifier=ios-arm64 -p:CodesignKey="${{ env.CODE_SIGNING_KEY }}" -p:CodesignProvision="testprofile"
    - name: Get IPA Path
      id: find-ipa
      run: |
         echo "ipa-path=$(find SampleApp/bin/Release/net9.0-ios/ios-arm64/publish -name "*.ipa")"  >> $GITHUB_ENV
         mkdir -p ~/private_keys
         echo -e "${{ secrets.APIKEY }}" > ~/private_keys/AuthKey_${{ secrets.KEYID }}.p8
         
    - name: Publish To Store
      run: |
          xcrun altool --validate-app -f "${{ env.ipa-path }}" -t ios --apiKey "${{ secrets.KEYID }}"  --apiIssuer "${{ secrets.ISSUERID }}"
          xcrun altool --upload-app -f "${{ env.ipa-path }}" -t ios --apiKey "${{ secrets.KEYID }}"  --apiIssuer "${{ secrets.ISSUERID }}"
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.0
      with:
        name: com.tessti
        path: |
          ${{ env.ipa-path }}
    
